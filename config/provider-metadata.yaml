name: ilijamt/awx
resources:
    awx_ad_hoc_command Resource - awx:
        subCategory: ""
        name: awx_ad_hoc_command Resource - awx
        title: awx_ad_hoc_command Resource - awx
        argumentDocs:
            become_enabled: (Boolean) Become enabled
            canceled_on: (String) The date and time when the cancel request was sent.
            controller_node: (String) The instance that managed the execution environment.
            credential: (Number) Credential
            diff_mode: (Boolean) Diff mode
            elapsed: (Number) Elapsed time in seconds that the job ran.
            execution_environment: (Number) The container image to be used for execution.
            execution_node: (String) The node the job executed on.
            extra_vars: (String) Extra vars
            failed: (Boolean)
            finished: (String) The date and time the job finished execution.
            forks: (Number) Forks
            id: (Number) Database ID for this ad hoc command.
            inventory: (Number) Inventory
            job_explanation: (String) A status field to indicate the state of the job if it wasn't able to run and capture stdout
            job_type: (String) Job type
            launch_type: (String)
            launched_by: (Number)
            limit: (String) Limit
            module_args: (String) Module args
            module_name: (String) Module name
            name: (String) Name of this ad hoc command.
            started: (String) The date and time the job was queued for starting.
            status: (String)
            verbosity: (String) Verbosity
            work_unit_id: (String) The Receptor work unit ID associated with this job.
        importStatements: []
    awx_application Resource - awx:
        subCategory: ""
        name: awx_application Resource - awx
        title: awx_application Resource - awx
        argumentDocs:
            authorization_grant_type: (String) The Grant type the user must use for acquire tokens for this application.
            client_id: (String)
            client_secret: (String, Sensitive) Used for more stringent verification of access to an application when creating a token.
            client_type: (String) Set to Public or Confidential depending on how secure the client device is.
            description: (String) Optional description of this application.
            id: (Number) Database ID for this application.
            name: (String) Name of this application.
            organization: (Number) Organization containing this application.
            redirect_uris: (String) Allowed URIs list, space separated
            skip_authorization: (Boolean) Set True to skip authorization step for completely trusted applications.
        importStatements: []
    awx_constructed_inventories Resource - awx:
        subCategory: ""
        name: awx_constructed_inventories Resource - awx
        title: awx_constructed_inventories Resource - awx
        argumentDocs:
            description: (String) Optional description of this inventory.
            has_active_failures: (Boolean, Deprecated) Flag indicating whether any hosts in this inventory have failed.
            has_inventory_sources: (Boolean, Deprecated) Flag indicating whether this inventory has any external inventory sources.
            hosts_with_active_failures: (Number, Deprecated) Number of hosts in this inventory with active failures.
            id: (Number) Database ID for this inventory.
            inventory_sources_with_failures: (Number) Number of external inventory sources in this inventory with failures.
            kind: (String) Kind of inventory being represented.
            limit: (String) The limit to restrict the returned hosts for the related auto-created inventory source, special to constructed inventory.
            name: (String) Name of this inventory.
            organization: (Number) Organization containing this inventory.
            pending_deletion: (Boolean) Flag indicating the inventory is being deleted.
            prevent_instance_group_fallback: (Boolean) If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied.
            source_vars: (String) The source_vars for the related auto-created inventory source, special to constructed inventory.
            total_groups: (Number, Deprecated) Total number of groups in this inventory.
            total_hosts: (Number, Deprecated) Total number of hosts in this inventory.
            total_inventory_sources: (Number) Total number of external inventory sources configured within this inventory.
            update_cache_timeout: (Number) The cache timeout for the related auto-created inventory source, special to constructed inventory
            variables: (String) Inventory variables in JSON or YAML format.
            verbosity: (Number) The verbosity level for the related auto-created inventory source, special to constructed inventory
        importStatements: []
    awx_credential Resource - awx:
        subCategory: ""
        name: awx_credential Resource - awx
        title: awx_credential Resource - awx
        argumentDocs:
            cloud: (Boolean)
            credential_type: (Number) Specify the type of credential you want to create. Refer to the documentation for details on each type.
            description: (String) Optional description of this credential.
            id: (Number) Database ID for this credential.
            inputs: (String) Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax.
            kind: (String)
            kubernetes: (Boolean)
            managed: (Boolean)
            name: (String) Name of this credential.
            organization: (Number) Inherit permissions from organization roles. If provided on creation, do not give either user or team.
            team: (Number) Write-only field used to add team to owner role. If provided, do not give either user or organization. Only valid for creation.
            user: (Number) Write-only field used to add user to owner role. If provided, do not give either team or organization. Only valid for creation.
        importStatements: []
    awx_credential_input_source Resource - awx:
        subCategory: ""
        name: awx_credential_input_source Resource - awx
        title: awx_credential_input_source Resource - awx
        argumentDocs:
            description: (String) Optional description of this credential input source.
            id: (Number) Database ID for this credential input source.
            input_field_name: (String) Input field name
            metadata: (String) Metadata
            source_credential: (Number) Source credential
            target_credential: (Number) Target credential
        importStatements: []
    awx_credential_type Resource - awx:
        subCategory: ""
        name: awx_credential_type Resource - awx
        title: awx_credential_type Resource - awx
        argumentDocs:
            description: (String) Optional description of this credential type.
            id: (Number) Database ID for this credential type.
            injectors: (String) Enter injectors using either JSON or YAML syntax. Refer to the documentation for example syntax.
            inputs: (String) Enter inputs using either JSON or YAML syntax. Refer to the documentation for example syntax.
            kind: (String) The credential type
            managed: (Boolean) Is the resource managed
            name: (String) Name of this credential type.
            namespace: (String) The namespace to which the resource belongs to
        importStatements: []
    awx_execution_environment Resource - awx:
        subCategory: ""
        name: awx_execution_environment Resource - awx
        title: awx_execution_environment Resource - awx
        argumentDocs:
            credential: (Number) Credential
            description: (String) Optional description of this execution environment.
            id: (Number) Database ID for this execution environment.
            image: (String) The full image location, including the container registry, image name, and version tag.
            managed: (Boolean)
            name: (String) Name of this execution environment.
            organization: (Number) The organization used to determine access to this execution environment.
            pull: (String) Pull image before running?
        importStatements: []
    awx_group Resource - awx:
        subCategory: ""
        name: awx_group Resource - awx
        title: awx_group Resource - awx
        argumentDocs:
            description: (String) Optional description of this group.
            id: (Number) Database ID for this group.
            inventory: (Number) Inventory
            name: (String) Name of this group.
            variables: (String) Group variables in JSON or YAML format.
        importStatements: []
    awx_host Resource - awx:
        subCategory: ""
        name: awx_host Resource - awx
        title: awx_host Resource - awx
        argumentDocs:
            description: (String) Optional description of this host.
            enabled: (Boolean) Is this host online and available for running jobs?
            id: (Number) Database ID for this host.
            instance_id: (String) The value used by the remote inventory source to uniquely identify the host
            inventory: (Number) Inventory
            last_job: (Number)
            last_job_host_summary: (Number)
            name: (String) Name of this host.
            variables: (String) Host variables in JSON or YAML format.
        importStatements: []
    awx_host_associate_group Resource - awx:
        subCategory: ""
        name: awx_host_associate_group Resource - awx
        title: awx_host_associate_group Resource - awx
        argumentDocs:
            group_id: (Number) Database ID of the group to assign.
            host_id: (Number) Database ID for this Host.
        importStatements: []
    awx_instance_group Resource - awx:
        subCategory: ""
        name: awx_instance_group Resource - awx
        title: awx_instance_group Resource - awx
        argumentDocs:
            capacity: (Number)
            consumed_capacity: (Number)
            credential: (Number) Credential
            id: (Number) Database ID for this instance group.
            instances: (Number)
            is_container_group: (Boolean) Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster.
            jobs_running: (Number)
            jobs_total: (Number) Count of all jobs that target this instance group
            max_concurrent_jobs: (Number) Maximum number of concurrent jobs to run on a group. When set to zero, no maximum is enforced.
            max_forks: (Number) Maximum number of forks to execute concurrently on a group. When set to zero, no maximum is enforced.
            name: (String) Name of this instance group.
            percent_capacity_remaining: (Number)
            pod_spec_override: (String) Pod spec override
            policy_instance_list: (String) List of exact-match Instances that will be assigned to this group
            policy_instance_minimum: (Number) Static minimum number of Instances that will be automatically assign to this group when new instances come online.
            policy_instance_percentage: (Number) Minimum percentage of all instances that will be automatically assigned to this group when new instances come online.
        importStatements: []
    awx_inventory Resource - awx:
        subCategory: ""
        name: awx_inventory Resource - awx
        title: awx_inventory Resource - awx
        argumentDocs:
            description: (String) Optional description of this inventory.
            has_active_failures: (Boolean, Deprecated) Flag indicating whether any hosts in this inventory have failed.
            has_inventory_sources: (Boolean, Deprecated) Flag indicating whether this inventory has any external inventory sources.
            host_filter: (String) Filter that will be applied to the hosts of this inventory.
            hosts_with_active_failures: (Number, Deprecated) Number of hosts in this inventory with active failures.
            id: (Number) Database ID for this inventory.
            inventory_sources_with_failures: (Number) Number of external inventory sources in this inventory with failures.
            kind: (String) Kind of inventory being represented.
            name: (String) Name of this inventory.
            organization: (Number) Organization containing this inventory.
            pending_deletion: (Boolean) Flag indicating the inventory is being deleted.
            prevent_instance_group_fallback: (Boolean) If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.If this setting is enabled and you provided an empty list, the global instance groups will be applied.
            total_groups: (Number, Deprecated) Total number of groups in this inventory.
            total_hosts: (Number, Deprecated) Total number of hosts in this inventory.
            total_inventory_sources: (Number) Total number of external inventory sources configured within this inventory.
            variables: (String) Inventory variables in JSON format
        importStatements: []
    awx_inventory_source Resource - awx:
        subCategory: ""
        name: awx_inventory_source Resource - awx
        title: awx_inventory_source Resource - awx
        argumentDocs:
            credential: (Number) Cloud credential to use for inventory updates.
            description: (String) Optional description of this inventory source.
            enabled_value: '(String) Only used when enabled_var is set. Value when the host is considered enabled. For example if enabled_var="status.power_state"and enabled_value="powered_on" with host variables:{   "status": {     "power_state": "powered_on",     "created": "2020-08-04T18:13:04+00:00",     "healthy": true    },    "name": "foobar",    "ip_address": "192.168.2.1"}The host would be marked enabled. If power_state where any value other than powered_on then the host would be disabled when imported. If the key is not found then the host will be enabled'
            enabled_var: '(String) Retrieve the enabled state from the given dict of host variables. The enabled variable may be specified as "foo.bar", in which case the lookup will traverse into nested dicts, equivalent to: from_dict.get("foo", {}).get("bar", default)'
            execution_environment: (Number) The container image to be used for execution.
            host_filter: (String, Deprecated) Regex where only matching hosts will be imported.
            id: (Number) Database ID for this inventory source.
            inventory: (Number) Inventory
            limit: (String) Enter host, group or pattern match
            name: (String) Name of this inventory source.
            overwrite: (Boolean) Overwrite local groups and hosts from remote inventory source.
            overwrite_vars: (Boolean) Overwrite local variables from remote inventory source.
            scm_branch: (String) Inventory source SCM branch. Project default used if blank. Only allowed if project allow_override field is set to true.
            source: (String) Source
            source_path: (String) Source path
            source_project: (Number) Project containing inventory file used as source.
            source_vars: (String) Inventory source variables in YAML or JSON format.
            timeout: (Number) The amount of time (in seconds) to run before the task is canceled.
            update_cache_timeout: (Number) Update cache timeout
            update_on_launch: (Boolean) Update on launch
            verbosity: (String) Verbosity
        importStatements: []
    awx_job_template Resource - awx:
        subCategory: ""
        name: awx_job_template Resource - awx
        title: awx_job_template Resource - awx
        argumentDocs:
            allow_simultaneous: (Boolean) Allow simultaneous
            ask_credential_on_launch: (Boolean) Ask credential on launch
            ask_diff_mode_on_launch: (Boolean) Ask diff mode on launch
            ask_execution_environment_on_launch: (Boolean) Ask execution environment on launch
            ask_forks_on_launch: (Boolean) Ask forks on launch
            ask_instance_groups_on_launch: (Boolean) Ask instance groups on launch
            ask_inventory_on_launch: (Boolean) Ask inventory on launch
            ask_job_slice_count_on_launch: (Boolean) Ask job slice count on launch
            ask_job_type_on_launch: (Boolean) Ask job type on launch
            ask_labels_on_launch: (Boolean) Ask labels on launch
            ask_limit_on_launch: (Boolean) Ask limit on launch
            ask_scm_branch_on_launch: (Boolean) Ask scm branch on launch
            ask_skip_tags_on_launch: (Boolean) Ask skip tags on launch
            ask_tags_on_launch: (Boolean) Ask tags on launch
            ask_timeout_on_launch: (Boolean) Ask timeout on launch
            ask_variables_on_launch: (Boolean) Ask variables on launch
            ask_verbosity_on_launch: (Boolean) Ask verbosity on launch
            become_enabled: (Boolean) Become enabled
            description: (String) Optional description of this job template.
            diff_mode: (Boolean) If enabled, textual changes made to any templated files on the host are shown in the standard output
            execution_environment: (Number) The container image to be used for execution.
            extra_vars: (String) Extra vars
            force_handlers: (Boolean) Force handlers
            forks: (Number) Forks
            host_config_key: (String) Host config key
            id: (Number) Database ID for this job template.
            inventory: (Number) Inventory
            job_slice_count: (Number) The number of jobs to slice into at runtime. Will cause the Job Template to launch a workflow if value is greater than 1.
            job_tags: (String) Job tags
            job_type: (String) Job type
            limit: (String) Limit
            name: (String) Name of this job template.
            organization: (Number) The organization used to determine access to this template.
            playbook: (String) Playbook
            prevent_instance_group_fallback: (Boolean) If enabled, the job template will prevent adding any inventory or organization instance groups to the list of preferred instances groups to run on.If this setting is enabled and you provided an empty list, the global instance groups will be applied.
            project: (Number) Project
            scm_branch: (String) Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true.
            skip_tags: (String) Skip tags
            start_at_task: (String) Start at task
            survey_enabled: (Boolean) Survey enabled
            timeout: (Number) The amount of time (in seconds) to run before the task is canceled.
            use_fact_cache: (Boolean) If enabled, the service will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible.
            verbosity: (String) Verbosity
            webhook_credential: (Number) Personal Access Token for posting back the status to the service API
            webhook_service: (String) Service that webhook requests will be accepted from
        importStatements: []
    awx_job_template_associate_credential Resource - awx:
        subCategory: ""
        name: awx_job_template_associate_credential Resource - awx
        title: awx_job_template_associate_credential Resource - awx
        argumentDocs:
            credential_id: (Number) Database ID of the credential to assign.
            job_template_id: (Number) Database ID for this JobTemplate.
        importStatements: []
    awx_job_template_associate_instance_group Resource - awx:
        subCategory: ""
        name: awx_job_template_associate_instance_group Resource - awx
        title: awx_job_template_associate_instance_group Resource - awx
        argumentDocs:
            instance_group_id: (Number) Database ID of the instancegroup to assign.
            job_template_id: (Number) Database ID for this JobTemplate.
        importStatements: []
    awx_job_template_associate_notification_template Resource - awx:
        subCategory: ""
        name: awx_job_template_associate_notification_template Resource - awx
        title: awx_job_template_associate_notification_template Resource - awx
        argumentDocs:
            job_template_id: (Number) Database ID for this JobTemplate.
            notification_template_id: (Number) Database ID of the notificationtemplate to assign.
            option: (String) Notification Option
        importStatements: []
    awx_job_template_survey_spec Resource - awx:
        subCategory: ""
        name: awx_job_template_survey_spec Resource - awx
        title: awx_job_template_survey_spec Resource - awx
        argumentDocs:
            job_template_id: (Number) Database ID for this JobTemplate.
            spec: (String) The survey spec for this JobTemplate.
        importStatements: []
    awx_label Resource - awx:
        subCategory: ""
        name: awx_label Resource - awx
        title: awx_label Resource - awx
        argumentDocs:
            id: (Number) Database ID for this label.
            name: (String) Name of this label.
            organization: (Number) Organization this label belongs to.
        importStatements: []
    awx_notification_template Resource - awx:
        subCategory: ""
        name: awx_notification_template Resource - awx
        title: awx_notification_template Resource - awx
        argumentDocs:
            description: (String) Optional description of this notification template.
            id: (Number) Database ID for this notification template.
            messages: (String) Optional custom messages for notification template.
            name: (String) Name of this notification template.
            notification_configuration: (String) Notification configuration
            notification_type: (String) Notification type
            organization: (Number) Organization
        importStatements: []
    awx_organization Resource - awx:
        subCategory: ""
        name: awx_organization Resource - awx
        title: awx_organization Resource - awx
        argumentDocs:
            default_environment: (Number) The default execution environment for jobs run by this organization.
            description: (String) Optional description of this organization.
            id: (Number) Database ID for this organization.
            max_hosts: (Number) Maximum number of hosts allowed to be managed by this organization.
            name: (String) Name of this organization.
        importStatements: []
    awx_organization_associate_galaxy_credential Resource - awx:
        subCategory: ""
        name: awx_organization_associate_galaxy_credential Resource - awx
        title: awx_organization_associate_galaxy_credential Resource - awx
        argumentDocs:
            galaxy_credential_id: (Number) Database ID of the galaxycredential to assign.
            organization_id: (Number) Database ID for this Organization.
        importStatements: []
    awx_organization_associate_instance_group Resource - awx:
        subCategory: ""
        name: awx_organization_associate_instance_group Resource - awx
        title: awx_organization_associate_instance_group Resource - awx
        argumentDocs:
            instance_group_id: (Number) Database ID of the instancegroup to assign.
            organization_id: (Number) Database ID for this Organization.
        importStatements: []
    awx_project Resource - awx:
        subCategory: ""
        name: awx_project Resource - awx
        title: awx_project Resource - awx
        argumentDocs:
            allow_override: (Boolean) Allow changing the SCM branch or revision in a job template that uses this project.
            credential: (Number) Credential
            default_environment: (Number) The default execution environment for jobs run using this project.
            description: (String) Optional description of this project.
            id: (Number) Database ID for this project.
            local_path: (String) Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project.
            name: (String) Name of this project.
            organization: (Number) The organization used to determine access to this template.
            scm_branch: (String) Specific branch, tag or commit to checkout.
            scm_clean: (Boolean) Discard any local changes before syncing the project.
            scm_delete_on_update: (Boolean) Delete the project before syncing.
            scm_refspec: (String) For git projects, an additional refspec to fetch.
            scm_track_submodules: (Boolean) Track submodules latest commits on defined branch.
            scm_type: (String) Specifies the source control system used to store the project.
            scm_update_cache_timeout: (Number) The number of seconds after the last project update ran that a new project update will be launched as a job dependency.
            scm_update_on_launch: (Boolean) Update the project when a job is launched that uses the project.
            scm_url: (String) The location where the project is stored.
            signature_validation_credential: (Number) An optional credential used for validating files in the project against unexpected changes.
            timeout: (Number) The amount of time (in seconds) to run before the task is canceled.
        importStatements: []
    awx_schedule Resource - awx:
        subCategory: ""
        name: awx_schedule Resource - awx
        title: awx_schedule Resource - awx
        argumentDocs:
            description: (String) Optional description of this schedule.
            diff_mode: (Boolean) Diff mode
            dtend: (String) The last occurrence of the schedule occurs before this time, aftewards the schedule expires.
            dtstart: (String) The first occurrence of the schedule occurs on or after this time.
            enabled: (Boolean) Enables processing of this schedule.
            execution_environment: (Number) The container image to be used for execution.
            extra_data: (String) Extra data
            forks: (Number) Forks
            id: (Number) Database ID for this schedule.
            inventory: (Number) Inventory applied as a prompt, assuming job template prompts for inventory
            job_slice_count: (Number) Job slice count
            job_tags: (String) Job tags
            job_type: (String) Job type
            limit: (String) Limit
            name: (String) Name of this schedule.
            next_run: (String) The next time that the scheduled action will run.
            rrule: (String) A value representing the schedules iCal recurrence rule.
            scm_branch: (String) Scm branch
            skip_tags: (String) Skip tags
            timeout: (Number) Timeout
            timezone: (String) The timezone this schedule runs in. This field is extracted from the RRULE. If the timezone in the RRULE is a link to another timezone, the link will be reflected in this field.
            unified_job_template: (Number) Unified job template
            until: (String) The date this schedule will end. This field is computed from the RRULE. If the schedule does not end an empty string will be returned
            verbosity: (String) Verbosity
        importStatements: []
    awx_settings_auth_azuread_oauth2 Resource - awx:
        subCategory: ""
        name: awx_settings_auth_azuread_oauth2 Resource - awx
        title: awx_settings_auth_azuread_oauth2 Resource - awx
        argumentDocs:
            social_auth_azuread_oauth2_callback_url: (String) Provide this URL as the callback URL for your application as part of your registration process. Refer to the documentation for more detail.
            social_auth_azuread_oauth2_key: (String) The OAuth2 key (Client ID) from your Azure AD application.
            social_auth_azuread_oauth2_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_azuread_oauth2_secret: (String, Sensitive) The OAuth2 secret (Client Secret) from your Azure AD application.
            social_auth_azuread_oauth2_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
        importStatements: []
    awx_settings_auth_github Resource - awx:
        subCategory: ""
        name: awx_settings_auth_github Resource - awx
        title: awx_settings_auth_github Resource - awx
        argumentDocs:
            social_auth_github_callback_url: (String) Provide this URL as the callback URL for your application as part of your registration process. Refer to the documentation for more detail.
            social_auth_github_key: (String) The OAuth2 key (Client ID) from your GitHub developer application.
            social_auth_github_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_github_secret: (String, Sensitive) The OAuth2 secret (Client Secret) from your GitHub developer application.
            social_auth_github_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
        importStatements: []
    awx_settings_auth_github_enterprise Resource - awx:
        subCategory: ""
        name: awx_settings_auth_github_enterprise Resource - awx
        title: awx_settings_auth_github_enterprise Resource - awx
        argumentDocs:
            social_auth_github_enterprise_api_url: '(String) The API URL for your GitHub Enterprise instance, e.g.: http(s)://hostname/api/v3/. Refer to Github Enterprise documentation for more details.'
            social_auth_github_enterprise_callback_url: (String) Provide this URL as the callback URL for your application as part of your registration process. Refer to the documentation for more detail.
            social_auth_github_enterprise_key: (String) The OAuth2 key (Client ID) from your GitHub Enterprise developer application.
            social_auth_github_enterprise_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_github_enterprise_secret: (String, Sensitive) The OAuth2 secret (Client Secret) from your GitHub Enterprise developer application.
            social_auth_github_enterprise_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
            social_auth_github_enterprise_url: '(String) The URL for your Github Enterprise instance, e.g.: http(s)://hostname/. Refer to Github Enterprise documentation for more details.'
        importStatements: []
    awx_settings_auth_github_enterprise_org Resource - awx:
        subCategory: ""
        name: awx_settings_auth_github_enterprise_org Resource - awx
        title: awx_settings_auth_github_enterprise_org Resource - awx
        argumentDocs:
            social_auth_github_enterprise_org_api_url: '(String) The API URL for your GitHub Enterprise instance, e.g.: http(s)://hostname/api/v3/. Refer to Github Enterprise documentation for more details.'
            social_auth_github_enterprise_org_callback_url: (String) Provide this URL as the callback URL for your application as part of your registration process. Refer to the documentation for more detail.
            social_auth_github_enterprise_org_key: (String) The OAuth2 key (Client ID) from your GitHub Enterprise organization application.
            social_auth_github_enterprise_org_name: '(String) The name of your GitHub Enterprise organization, as used in your organization''s URL: https://github.com//.'
            social_auth_github_enterprise_org_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_github_enterprise_org_secret: (String, Sensitive) The OAuth2 secret (Client Secret) from your GitHub Enterprise organization application.
            social_auth_github_enterprise_org_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
            social_auth_github_enterprise_org_url: '(String) The URL for your Github Enterprise instance, e.g.: http(s)://hostname/. Refer to Github Enterprise documentation for more details.'
        importStatements: []
    awx_settings_auth_github_enterprise_team Resource - awx:
        subCategory: ""
        name: awx_settings_auth_github_enterprise_team Resource - awx
        title: awx_settings_auth_github_enterprise_team Resource - awx
        argumentDocs:
            social_auth_github_enterprise_team_api_url: '(String) The API URL for your GitHub Enterprise instance, e.g.: http(s)://hostname/api/v3/. Refer to Github Enterprise documentation for more details.'
            social_auth_github_enterprise_team_callback_url: (String) Create an organization-owned application at https://github.com/organizations//settings/applications and obtain an OAuth2 key (Client ID) and secret (Client Secret). Provide this URL as the callback URL for your application.
            social_auth_github_enterprise_team_id: '(String) Find the numeric team ID using the Github Enterprise API: http://fabian-kostadinov.github.io/2015/01/16/how-to-find-a-github-team-id/.'
            social_auth_github_enterprise_team_key: (String) The OAuth2 key (Client ID) from your GitHub Enterprise organization application.
            social_auth_github_enterprise_team_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_github_enterprise_team_secret: (String, Sensitive) The OAuth2 secret (Client Secret) from your GitHub Enterprise organization application.
            social_auth_github_enterprise_team_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
            social_auth_github_enterprise_team_url: '(String) The URL for your Github Enterprise instance, e.g.: http(s)://hostname/. Refer to Github Enterprise documentation for more details.'
        importStatements: []
    awx_settings_auth_github_org Resource - awx:
        subCategory: ""
        name: awx_settings_auth_github_org Resource - awx
        title: awx_settings_auth_github_org Resource - awx
        argumentDocs:
            social_auth_github_org_callback_url: (String) Provide this URL as the callback URL for your application as part of your registration process. Refer to the documentation for more detail.
            social_auth_github_org_key: (String) The OAuth2 key (Client ID) from your GitHub organization application.
            social_auth_github_org_name: '(String) The name of your GitHub organization, as used in your organization''s URL: https://github.com//.'
            social_auth_github_org_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_github_org_secret: (String, Sensitive) The OAuth2 secret (Client Secret) from your GitHub organization application.
            social_auth_github_org_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
        importStatements: []
    awx_settings_auth_github_team Resource - awx:
        subCategory: ""
        name: awx_settings_auth_github_team Resource - awx
        title: awx_settings_auth_github_team Resource - awx
        argumentDocs:
            social_auth_github_team_callback_url: (String) Create an organization-owned application at https://github.com/organizations//settings/applications and obtain an OAuth2 key (Client ID) and secret (Client Secret). Provide this URL as the callback URL for your application.
            social_auth_github_team_id: '(String) Find the numeric team ID using the Github API: http://fabian-kostadinov.github.io/2015/01/16/how-to-find-a-github-team-id/.'
            social_auth_github_team_key: (String) The OAuth2 key (Client ID) from your GitHub organization application.
            social_auth_github_team_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_github_team_secret: (String, Sensitive) The OAuth2 secret (Client Secret) from your GitHub organization application.
            social_auth_github_team_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
        importStatements: []
    awx_settings_auth_google_oauth2 Resource - awx:
        subCategory: ""
        name: awx_settings_auth_google_oauth2 Resource - awx
        title: awx_settings_auth_google_oauth2 Resource - awx
        argumentDocs:
            social_auth_google_oauth2_auth_extra_arguments: (String) Extra arguments for Google OAuth2 login. You can restrict it to only allow a single domain to authenticate, even if the user is logged in with multple Google accounts. Refer to the documentation for more detail.
            social_auth_google_oauth2_callback_url: (String) Provide this URL as the callback URL for your application as part of your registration process. Refer to the documentation for more detail.
            social_auth_google_oauth2_key: (String) The OAuth2 key from your web application.
            social_auth_google_oauth2_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_google_oauth2_secret: (String, Sensitive) The OAuth2 secret from your web application.
            social_auth_google_oauth2_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
            social_auth_google_oauth2_whitelisted_domains: (List of String) Update this setting to restrict the domains who are allowed to login using Google OAuth2.
        importStatements: []
    awx_settings_auth_ldap Resource - awx:
        subCategory: ""
        name: awx_settings_auth_ldap Resource - awx
        title: awx_settings_auth_ldap Resource - awx
        argumentDocs:
            auth_ldap_1_bind_dn: (String) DN (Distinguished Name) of user to bind for all search queries. This is the system user account we will use to login to query LDAP for other user information. Refer to the documentation for example syntax.
            auth_ldap_1_bind_password: (String, Sensitive) Password used to bind LDAP user account.
            auth_ldap_1_connection_options: (String) Additional options to set for the LDAP connection.  LDAP referrals are disabled by default (to prevent certain LDAP queries from hanging with AD). Option names should be strings (e.g. "OPT_REFERRALS"). Refer to https://www.python-ldap.org/doc/html/ldap.html#options for possible options and values that can be set.
            auth_ldap_1_deny_group: (String) Group DN denied from login. If specified, user will not be allowed to login if a member of this group.  Only one deny group is supported.
            auth_ldap_1_group_search: (List of String) Users are mapped to organizations based on their membership in LDAP groups. This setting defines the LDAP search query to find groups. Unlike the user search, group search does not support LDAPSearchUnion.
            auth_ldap_1_group_type: '(String) The group type may need to be changed based on the type of the LDAP server.  Values are listed at: https://django-auth-ldap.readthedocs.io/en/stable/groups.html#types-of-groups'
            auth_ldap_1_group_type_params: (String) Key value parameters to send the chosen group type init method.
            auth_ldap_1_organization_map: (String) Mapping between organization admins/users and LDAP groups. This controls which users are placed into which organizations relative to their LDAP group memberships. Configuration details are available in the documentation.
            auth_ldap_1_require_group: (String) Group DN required to login. If specified, user must be a member of this group to login via LDAP. If not set, everyone in LDAP that matches the user search will be able to login to the service. Only one require group is supported.
            auth_ldap_1_server_uri: (String) URI to connect to LDAP server, such as "ldap://ldap.example.com:389" (non-SSL) or "ldaps://ldap.example.com:636" (SSL). Multiple LDAP servers may be specified by separating with spaces or commas. LDAP authentication is disabled if this parameter is empty.
            auth_ldap_1_start_tls: (Boolean) Whether to enable TLS when the LDAP connection is not using SSL.
            auth_ldap_1_team_map: (String) Mapping between team members (users) and LDAP groups. Configuration details are available in the documentation.
            auth_ldap_1_user_attr_map: (String) Mapping of LDAP user schema to API user attributes. The default setting is valid for ActiveDirectory but users with other LDAP configurations may need to change the values. Refer to the documentation for additional details.
            auth_ldap_1_user_dn_template: (String) Alternative to user search, if user DNs are all of the same format. This approach is more efficient for user lookups than searching if it is usable in your organizational environment. If this setting has a value it will be used instead of AUTH_LDAP_USER_SEARCH.
            auth_ldap_1_user_flags_by_group: (String) Retrieve users from a given group. At this time, superuser and system auditors are the only groups supported. Refer to the documentation for more detail.
            auth_ldap_1_user_search: (List of String) LDAP search query to find users.  Any user that matches the given pattern will be able to login to the service.  The user should also be mapped into an organization (as defined in the AUTH_LDAP_ORGANIZATION_MAP setting).  If multiple search queries need to be supported use of "LDAPUnion" is possible. See the documentation for details.
            auth_ldap_2_bind_dn: (String) DN (Distinguished Name) of user to bind for all search queries. This is the system user account we will use to login to query LDAP for other user information. Refer to the documentation for example syntax.
            auth_ldap_2_bind_password: (String, Sensitive) Password used to bind LDAP user account.
            auth_ldap_2_connection_options: (String) Additional options to set for the LDAP connection.  LDAP referrals are disabled by default (to prevent certain LDAP queries from hanging with AD). Option names should be strings (e.g. "OPT_REFERRALS"). Refer to https://www.python-ldap.org/doc/html/ldap.html#options for possible options and values that can be set.
            auth_ldap_2_deny_group: (String) Group DN denied from login. If specified, user will not be allowed to login if a member of this group.  Only one deny group is supported.
            auth_ldap_2_group_search: (List of String) Users are mapped to organizations based on their membership in LDAP groups. This setting defines the LDAP search query to find groups. Unlike the user search, group search does not support LDAPSearchUnion.
            auth_ldap_2_group_type: '(String) The group type may need to be changed based on the type of the LDAP server.  Values are listed at: https://django-auth-ldap.readthedocs.io/en/stable/groups.html#types-of-groups'
            auth_ldap_2_group_type_params: (String) Key value parameters to send the chosen group type init method.
            auth_ldap_2_organization_map: (String) Mapping between organization admins/users and LDAP groups. This controls which users are placed into which organizations relative to their LDAP group memberships. Configuration details are available in the documentation.
            auth_ldap_2_require_group: (String) Group DN required to login. If specified, user must be a member of this group to login via LDAP. If not set, everyone in LDAP that matches the user search will be able to login to the service. Only one require group is supported.
            auth_ldap_2_server_uri: (String) URI to connect to LDAP server, such as "ldap://ldap.example.com:389" (non-SSL) or "ldaps://ldap.example.com:636" (SSL). Multiple LDAP servers may be specified by separating with spaces or commas. LDAP authentication is disabled if this parameter is empty.
            auth_ldap_2_start_tls: (Boolean) Whether to enable TLS when the LDAP connection is not using SSL.
            auth_ldap_2_team_map: (String) Mapping between team members (users) and LDAP groups. Configuration details are available in the documentation.
            auth_ldap_2_user_attr_map: (String) Mapping of LDAP user schema to API user attributes. The default setting is valid for ActiveDirectory but users with other LDAP configurations may need to change the values. Refer to the documentation for additional details.
            auth_ldap_2_user_dn_template: (String) Alternative to user search, if user DNs are all of the same format. This approach is more efficient for user lookups than searching if it is usable in your organizational environment. If this setting has a value it will be used instead of AUTH_LDAP_USER_SEARCH.
            auth_ldap_2_user_flags_by_group: (String) Retrieve users from a given group. At this time, superuser and system auditors are the only groups supported. Refer to the documentation for more detail.
            auth_ldap_2_user_search: (List of String) LDAP search query to find users.  Any user that matches the given pattern will be able to login to the service.  The user should also be mapped into an organization (as defined in the AUTH_LDAP_ORGANIZATION_MAP setting).  If multiple search queries need to be supported use of "LDAPUnion" is possible. See the documentation for details.
            auth_ldap_3_bind_dn: (String) DN (Distinguished Name) of user to bind for all search queries. This is the system user account we will use to login to query LDAP for other user information. Refer to the documentation for example syntax.
            auth_ldap_3_bind_password: (String, Sensitive) Password used to bind LDAP user account.
            auth_ldap_3_connection_options: (String) Additional options to set for the LDAP connection.  LDAP referrals are disabled by default (to prevent certain LDAP queries from hanging with AD). Option names should be strings (e.g. "OPT_REFERRALS"). Refer to https://www.python-ldap.org/doc/html/ldap.html#options for possible options and values that can be set.
            auth_ldap_3_deny_group: (String) Group DN denied from login. If specified, user will not be allowed to login if a member of this group.  Only one deny group is supported.
            auth_ldap_3_group_search: (List of String) Users are mapped to organizations based on their membership in LDAP groups. This setting defines the LDAP search query to find groups. Unlike the user search, group search does not support LDAPSearchUnion.
            auth_ldap_3_group_type: '(String) The group type may need to be changed based on the type of the LDAP server.  Values are listed at: https://django-auth-ldap.readthedocs.io/en/stable/groups.html#types-of-groups'
            auth_ldap_3_group_type_params: (String) Key value parameters to send the chosen group type init method.
            auth_ldap_3_organization_map: (String) Mapping between organization admins/users and LDAP groups. This controls which users are placed into which organizations relative to their LDAP group memberships. Configuration details are available in the documentation.
            auth_ldap_3_require_group: (String) Group DN required to login. If specified, user must be a member of this group to login via LDAP. If not set, everyone in LDAP that matches the user search will be able to login to the service. Only one require group is supported.
            auth_ldap_3_server_uri: (String) URI to connect to LDAP server, such as "ldap://ldap.example.com:389" (non-SSL) or "ldaps://ldap.example.com:636" (SSL). Multiple LDAP servers may be specified by separating with spaces or commas. LDAP authentication is disabled if this parameter is empty.
            auth_ldap_3_start_tls: (Boolean) Whether to enable TLS when the LDAP connection is not using SSL.
            auth_ldap_3_team_map: (String) Mapping between team members (users) and LDAP groups. Configuration details are available in the documentation.
            auth_ldap_3_user_attr_map: (String) Mapping of LDAP user schema to API user attributes. The default setting is valid for ActiveDirectory but users with other LDAP configurations may need to change the values. Refer to the documentation for additional details.
            auth_ldap_3_user_dn_template: (String) Alternative to user search, if user DNs are all of the same format. This approach is more efficient for user lookups than searching if it is usable in your organizational environment. If this setting has a value it will be used instead of AUTH_LDAP_USER_SEARCH.
            auth_ldap_3_user_flags_by_group: (String) Retrieve users from a given group. At this time, superuser and system auditors are the only groups supported. Refer to the documentation for more detail.
            auth_ldap_3_user_search: (List of String) LDAP search query to find users.  Any user that matches the given pattern will be able to login to the service.  The user should also be mapped into an organization (as defined in the AUTH_LDAP_ORGANIZATION_MAP setting).  If multiple search queries need to be supported use of "LDAPUnion" is possible. See the documentation for details.
            auth_ldap_4_bind_dn: (String) DN (Distinguished Name) of user to bind for all search queries. This is the system user account we will use to login to query LDAP for other user information. Refer to the documentation for example syntax.
            auth_ldap_4_bind_password: (String, Sensitive) Password used to bind LDAP user account.
            auth_ldap_4_connection_options: (String) Additional options to set for the LDAP connection.  LDAP referrals are disabled by default (to prevent certain LDAP queries from hanging with AD). Option names should be strings (e.g. "OPT_REFERRALS"). Refer to https://www.python-ldap.org/doc/html/ldap.html#options for possible options and values that can be set.
            auth_ldap_4_deny_group: (String) Group DN denied from login. If specified, user will not be allowed to login if a member of this group.  Only one deny group is supported.
            auth_ldap_4_group_search: (List of String) Users are mapped to organizations based on their membership in LDAP groups. This setting defines the LDAP search query to find groups. Unlike the user search, group search does not support LDAPSearchUnion.
            auth_ldap_4_group_type: '(String) The group type may need to be changed based on the type of the LDAP server.  Values are listed at: https://django-auth-ldap.readthedocs.io/en/stable/groups.html#types-of-groups'
            auth_ldap_4_group_type_params: (String) Key value parameters to send the chosen group type init method.
            auth_ldap_4_organization_map: (String) Mapping between organization admins/users and LDAP groups. This controls which users are placed into which organizations relative to their LDAP group memberships. Configuration details are available in the documentation.
            auth_ldap_4_require_group: (String) Group DN required to login. If specified, user must be a member of this group to login via LDAP. If not set, everyone in LDAP that matches the user search will be able to login to the service. Only one require group is supported.
            auth_ldap_4_server_uri: (String) URI to connect to LDAP server, such as "ldap://ldap.example.com:389" (non-SSL) or "ldaps://ldap.example.com:636" (SSL). Multiple LDAP servers may be specified by separating with spaces or commas. LDAP authentication is disabled if this parameter is empty.
            auth_ldap_4_start_tls: (Boolean) Whether to enable TLS when the LDAP connection is not using SSL.
            auth_ldap_4_team_map: (String) Mapping between team members (users) and LDAP groups. Configuration details are available in the documentation.
            auth_ldap_4_user_attr_map: (String) Mapping of LDAP user schema to API user attributes. The default setting is valid for ActiveDirectory but users with other LDAP configurations may need to change the values. Refer to the documentation for additional details.
            auth_ldap_4_user_dn_template: (String) Alternative to user search, if user DNs are all of the same format. This approach is more efficient for user lookups than searching if it is usable in your organizational environment. If this setting has a value it will be used instead of AUTH_LDAP_USER_SEARCH.
            auth_ldap_4_user_flags_by_group: (String) Retrieve users from a given group. At this time, superuser and system auditors are the only groups supported. Refer to the documentation for more detail.
            auth_ldap_4_user_search: (List of String) LDAP search query to find users.  Any user that matches the given pattern will be able to login to the service.  The user should also be mapped into an organization (as defined in the AUTH_LDAP_ORGANIZATION_MAP setting).  If multiple search queries need to be supported use of "LDAPUnion" is possible. See the documentation for details.
            auth_ldap_5_bind_dn: (String) DN (Distinguished Name) of user to bind for all search queries. This is the system user account we will use to login to query LDAP for other user information. Refer to the documentation for example syntax.
            auth_ldap_5_bind_password: (String, Sensitive) Password used to bind LDAP user account.
            auth_ldap_5_connection_options: (String) Additional options to set for the LDAP connection.  LDAP referrals are disabled by default (to prevent certain LDAP queries from hanging with AD). Option names should be strings (e.g. "OPT_REFERRALS"). Refer to https://www.python-ldap.org/doc/html/ldap.html#options for possible options and values that can be set.
            auth_ldap_5_deny_group: (String) Group DN denied from login. If specified, user will not be allowed to login if a member of this group.  Only one deny group is supported.
            auth_ldap_5_group_search: (List of String) Users are mapped to organizations based on their membership in LDAP groups. This setting defines the LDAP search query to find groups. Unlike the user search, group search does not support LDAPSearchUnion.
            auth_ldap_5_group_type: '(String) The group type may need to be changed based on the type of the LDAP server.  Values are listed at: https://django-auth-ldap.readthedocs.io/en/stable/groups.html#types-of-groups'
            auth_ldap_5_group_type_params: (String) Key value parameters to send the chosen group type init method.
            auth_ldap_5_organization_map: (String) Mapping between organization admins/users and LDAP groups. This controls which users are placed into which organizations relative to their LDAP group memberships. Configuration details are available in the documentation.
            auth_ldap_5_require_group: (String) Group DN required to login. If specified, user must be a member of this group to login via LDAP. If not set, everyone in LDAP that matches the user search will be able to login to the service. Only one require group is supported.
            auth_ldap_5_server_uri: (String) URI to connect to LDAP server, such as "ldap://ldap.example.com:389" (non-SSL) or "ldaps://ldap.example.com:636" (SSL). Multiple LDAP servers may be specified by separating with spaces or commas. LDAP authentication is disabled if this parameter is empty.
            auth_ldap_5_start_tls: (Boolean) Whether to enable TLS when the LDAP connection is not using SSL.
            auth_ldap_5_team_map: (String) Mapping between team members (users) and LDAP groups. Configuration details are available in the documentation.
            auth_ldap_5_user_attr_map: (String) Mapping of LDAP user schema to API user attributes. The default setting is valid for ActiveDirectory but users with other LDAP configurations may need to change the values. Refer to the documentation for additional details.
            auth_ldap_5_user_dn_template: (String) Alternative to user search, if user DNs are all of the same format. This approach is more efficient for user lookups than searching if it is usable in your organizational environment. If this setting has a value it will be used instead of AUTH_LDAP_USER_SEARCH.
            auth_ldap_5_user_flags_by_group: (String) Retrieve users from a given group. At this time, superuser and system auditors are the only groups supported. Refer to the documentation for more detail.
            auth_ldap_5_user_search: (List of String) LDAP search query to find users.  Any user that matches the given pattern will be able to login to the service.  The user should also be mapped into an organization (as defined in the AUTH_LDAP_ORGANIZATION_MAP setting).  If multiple search queries need to be supported use of "LDAPUnion" is possible. See the documentation for details.
            auth_ldap_bind_dn: (String) DN (Distinguished Name) of user to bind for all search queries. This is the system user account we will use to login to query LDAP for other user information. Refer to the documentation for example syntax.
            auth_ldap_bind_password: (String, Sensitive) Password used to bind LDAP user account.
            auth_ldap_connection_options: (String) Additional options to set for the LDAP connection.  LDAP referrals are disabled by default (to prevent certain LDAP queries from hanging with AD). Option names should be strings (e.g. "OPT_REFERRALS"). Refer to https://www.python-ldap.org/doc/html/ldap.html#options for possible options and values that can be set.
            auth_ldap_deny_group: (String) Group DN denied from login. If specified, user will not be allowed to login if a member of this group.  Only one deny group is supported.
            auth_ldap_group_search: (List of String) Users are mapped to organizations based on their membership in LDAP groups. This setting defines the LDAP search query to find groups. Unlike the user search, group search does not support LDAPSearchUnion.
            auth_ldap_group_type: '(String) The group type may need to be changed based on the type of the LDAP server.  Values are listed at: https://django-auth-ldap.readthedocs.io/en/stable/groups.html#types-of-groups'
            auth_ldap_group_type_params: (String) Key value parameters to send the chosen group type init method.
            auth_ldap_organization_map: (String) Mapping between organization admins/users and LDAP groups. This controls which users are placed into which organizations relative to their LDAP group memberships. Configuration details are available in the documentation.
            auth_ldap_require_group: (String) Group DN required to login. If specified, user must be a member of this group to login via LDAP. If not set, everyone in LDAP that matches the user search will be able to login to the service. Only one require group is supported.
            auth_ldap_server_uri: (String) URI to connect to LDAP server, such as "ldap://ldap.example.com:389" (non-SSL) or "ldaps://ldap.example.com:636" (SSL). Multiple LDAP servers may be specified by separating with spaces or commas. LDAP authentication is disabled if this parameter is empty.
            auth_ldap_start_tls: (Boolean) Whether to enable TLS when the LDAP connection is not using SSL.
            auth_ldap_team_map: (String) Mapping between team members (users) and LDAP groups. Configuration details are available in the documentation.
            auth_ldap_user_attr_map: (String) Mapping of LDAP user schema to API user attributes. The default setting is valid for ActiveDirectory but users with other LDAP configurations may need to change the values. Refer to the documentation for additional details.
            auth_ldap_user_dn_template: (String) Alternative to user search, if user DNs are all of the same format. This approach is more efficient for user lookups than searching if it is usable in your organizational environment. If this setting has a value it will be used instead of AUTH_LDAP_USER_SEARCH.
            auth_ldap_user_flags_by_group: (String) Retrieve users from a given group. At this time, superuser and system auditors are the only groups supported. Refer to the documentation for more detail.
            auth_ldap_user_search: (List of String) LDAP search query to find users.  Any user that matches the given pattern will be able to login to the service.  The user should also be mapped into an organization (as defined in the AUTH_LDAP_ORGANIZATION_MAP setting).  If multiple search queries need to be supported use of "LDAPUnion" is possible. See the documentation for details.
        importStatements: []
    awx_settings_auth_saml Resource - awx:
        subCategory: ""
        name: awx_settings_auth_saml Resource - awx
        title: awx_settings_auth_saml Resource - awx
        argumentDocs:
            saml_auto_create_objects: (Boolean) When enabled (the default), mapped Organizations and Teams will be created automatically on successful SAML login.
            social_auth_saml_callback_url: (String) Register the service as a service provider (SP) with each identity provider (IdP) you have configured. Provide your SP Entity ID and this ACS URL for your application.
            social_auth_saml_enabled_idps: (String) Configure the Entity ID, SSO URL and certificate for each identity provider (IdP) in use. Multiple SAML IdPs are supported. Some IdPs may provide user data using attribute names that differ from the default OIDs. Attribute names may be overridden for each IdP. Refer to the Ansible documentation for additional details and syntax.
            social_auth_saml_extra_data: (List of String) A list of tuples that maps IDP attributes to extra_attributes. Each attribute will be a list of values, even if only 1 value.
            social_auth_saml_metadata_url: (String) If your identity provider (IdP) allows uploading an XML metadata file, you can download one from this URL.
            social_auth_saml_org_info: (String) Provide the URL, display name, and the name of your app. Refer to the documentation for example syntax.
            social_auth_saml_organization_attr: (String) Used to translate user organization membership.
            social_auth_saml_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_saml_security_config: (String) A dict of key value pairs that are passed to the underlying python-saml security setting https://github.com/onelogin/python-saml#settings
            social_auth_saml_sp_entity_id: (String) The application-defined unique identifier used as the audience of the SAML service provider (SP) configuration. This is usually the URL for the service.
            social_auth_saml_sp_extra: (String) A dict of key value pairs to be passed to the underlying python-saml Service Provider configuration setting.
            social_auth_saml_sp_private_key: (String, Sensitive) Create a keypair to use as a service provider (SP) and include the private key content here.
            social_auth_saml_sp_public_cert: (String) Create a keypair to use as a service provider (SP) and include the certificate content here.
            social_auth_saml_support_contact: (String) Provide the name and email address of the support contact for your service provider. Refer to the documentation for example syntax.
            social_auth_saml_team_attr: (String) Used to translate user team membership.
            social_auth_saml_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
            social_auth_saml_technical_contact: (String) Provide the name and email address of the technical contact for your service provider. Refer to the documentation for example syntax.
            social_auth_saml_user_flags_by_attr: (String) Used to map super users and system auditors from SAML.
        importStatements: []
    awx_settings_jobs Resource - awx:
        subCategory: ""
        name: awx_settings_jobs Resource - awx
        title: awx_settings_jobs Resource - awx
        argumentDocs:
            ad_hoc_commands: (List of String) List of modules allowed to be used by ad-hoc jobs.
            allow_jinja_in_extra_vars: (String) Ansible allows variable substitution via the Jinja2 templating language for --extra-vars. This poses a potential security risk where users with the ability to specify extra vars at job launch time can use Jinja2 templates to run arbitrary Python.  It is recommended that this value be set to "template" or "never".
            ansible_fact_cache_timeout: (Number) Maximum time, in seconds, that stored Ansible facts are considered valid since the last time they were modified. Only valid, non-stale, facts will be accessible by a playbook. Note, this does not influence the deletion of ansible_facts from the database. Use a value of 0 to indicate that no timeout should be imposed.
            awx_ansible_callback_plugins: (List of String) List of paths to search for extra callback plugins to be used when running jobs. Enter one path per line.
            awx_collections_enabled: (Boolean) Allows collections to be dynamically downloaded from a requirements.yml file for SCM projects.
            awx_isolation_base_path: (String) The directory in which the service will create new temporary directories for job execution and isolation (such as credential files).
            awx_isolation_show_paths: (List of String) List of paths that would otherwise be hidden to expose to isolated jobs. Enter one path per line. Volumes will be mounted from the execution node to the container. The supported format is HOST-DIR[:CONTAINER-DIR[:OPTIONS]].
            awx_mount_isolated_paths_on_k8s: (Boolean) Expose paths via hostPath for the Pods created by a Container Group. HostPath volumes present many security risks, and it is a best practice to avoid the use of HostPaths when possible.
            awx_roles_enabled: (Boolean) Allows roles to be dynamically downloaded from a requirements.yml file for SCM projects.
            awx_runner_keepalive_seconds: (Number) Only applies to jobs running in a Container Group. If not 0, send a message every so-many seconds to keep connection open.
            awx_show_playbook_links: (Boolean) Follow symbolic links when scanning for playbooks. Be aware that setting this to True can lead to infinite recursion if a link points to a parent directory of itself.
            awx_task_env: (String) Additional environment variables set for playbook runs, inventory updates, project updates, and notification sending.
            default_container_run_options: '(List of String) List of options to pass to podman run example: [''--network'', ''slirp4netns:enable_ipv6=true'', ''--log-level'', ''debug'']'
            default_inventory_update_timeout: (Number) Maximum time in seconds to allow inventory updates to run. Use value of 0 to indicate that no timeout should be imposed. A timeout set on an individual inventory source will override this.
            default_job_idle_timeout: (Number) If no output is detected from ansible in this number of seconds the execution will be terminated. Use value of 0 to indicate that no idle timeout should be imposed.
            default_job_timeout: (Number) Maximum time in seconds to allow jobs to run. Use value of 0 to indicate that no timeout should be imposed. A timeout set on an individual job template will override this.
            default_project_update_timeout: (Number) Maximum time in seconds to allow project updates to run. Use value of 0 to indicate that no timeout should be imposed. A timeout set on an individual project will override this.
            event_stdout_max_bytes_display: (Number) Maximum Size of Standard Output in bytes to display for a single job or ad hoc command event. stdout will end with … when truncated.
            galaxy_ignore_certs: (Boolean) If set to true, certificate validation will not be done when installing content from any Galaxy server.
            galaxy_task_env: (String) Additional environment variables set for invocations of ansible-galaxy within project updates. Useful if you must use a proxy server for ansible-galaxy but not git.
            max_forks: (Number) Saving a Job Template with more than this number of forks will result in an error. When set to 0, no limit is applied.
            max_websocket_event_rate: (Number) Maximum number of messages to update the UI live job output with per second. Value of 0 means no limit.
            project_update_vvv: (Boolean) Adds the CLI -vvv flag to ansible-playbook runs of project_update.yml used for project updates.
            schedule_max_jobs: (Number) Maximum number of the same job template that can be waiting to run when launching from a schedule before no more are created.
            stdout_max_bytes_display: (Number) Maximum Size of Standard Output in bytes to display before requiring the output be downloaded.
        importStatements: []
    awx_settings_misc_authentication Resource - awx:
        subCategory: ""
        name: awx_settings_misc_authentication Resource - awx
        title: awx_settings_misc_authentication Resource - awx
        argumentDocs:
            allow_metrics_for_anonymous_users: (Boolean) If true, anonymous users are allowed to poll metrics.
            allow_oauth2_for_external_users: (Boolean) For security reasons, users from external auth providers (LDAP, SAML, SSO, Radius, and others) are not allowed to create OAuth2 tokens. To change this behavior, enable this setting. Existing tokens will not be deleted when this setting is toggled off.
            auth_basic_enabled: (Boolean) Enable HTTP Basic Auth for the API Browser.
            authentication_backends: (List of String) List of authentication backends that are enabled based on license features and other authentication settings.
            disable_local_auth: (Boolean) Controls whether users are prevented from using the built-in authentication system. You probably want to do this if you are using an LDAP or SAML integration.
            local_password_min_digits: (Number) Minimum number of digit characters required in a local password. 0 means no minimum
            local_password_min_length: (Number) Minimum number of characters required in a local password. 0 means no minimum
            local_password_min_special: (Number) Minimum number of special characters required in a local password. 0 means no minimum
            local_password_min_upper: (Number) Minimum number of uppercase characters required in a local password. 0 means no minimum
            login_redirect_override: (String) URL to which unauthorized users will be redirected to log in.  If blank, users will be sent to the login page.
            oauth2_provider: (String) Dictionary for customizing OAuth 2 timeouts, available items are ACCESS_TOKEN_EXPIRE_SECONDS, the duration of access tokens in the number of seconds, AUTHORIZATION_CODE_EXPIRE_SECONDS, the duration of authorization codes in the number of seconds, and REFRESH_TOKEN_EXPIRE_SECONDS, the duration of refresh tokens, after expired access tokens, in the number of seconds.
            session_cookie_age: (Number) Number of seconds that a user is inactive before they will need to login again.
            sessions_per_user: (Number) Maximum number of simultaneous logged in sessions a user may have. To disable enter -1.
            social_auth_organization_map: |-
                (String) Mapping to organization admins/users from social auth accounts. This setting
                controls which users are placed into which organizations based on their
                username and email address. Configuration details are available in the
                documentation.
            social_auth_team_map: |-
                (String) Mapping of team members (users) from social auth accounts. Configuration
                details are available in the documentation.
            social_auth_user_fields: (List of String) When set to an empty list [], this setting prevents new user accounts from being created. Only users who have previously logged in using social auth or have a user account with a matching email address will be able to login.
            social_auth_username_is_full_email: (Boolean) Enabling this setting will tell social auth to use the full Email as username instead of the full name
        importStatements: []
    awx_settings_misc_logging Resource - awx:
        subCategory: ""
        name: awx_settings_misc_logging Resource - awx
        title: awx_settings_misc_logging Resource - awx
        argumentDocs:
            api_400_error_log_format: |-
                (String) The format of logged messages when an API 4XX error occurs, the following variables will be substituted:
                status_code - The HTTP status code of the error
                user_name - The user name attempting to use the API
                url_path - The URL path to the API endpoint called
                remote_addr - The remote address seen for the user
                error - The error set by the api endpoint
                Variables need to be in the format {}.
            log_aggregator_action_max_disk_usage_gb: (Number) Amount of data to store (in gigabytes) if an rsyslog action takes time to process an incoming message (defaults to 1). Equivalent to the rsyslogd queue.maxdiskspace setting on the action (e.g. omhttp). It stores files in the directory specified by LOG_AGGREGATOR_MAX_DISK_USAGE_PATH.
            log_aggregator_action_queue_size: (Number) Defines how large the rsyslog action queue can grow in number of messages stored. This can have an impact on memory utilization. When the queue reaches 75% of this number, the queue will start writing to disk (queue.highWatermark in rsyslog). When it reaches 90%, NOTICE, INFO, and DEBUG messages will start to be discarded (queue.discardMark with queue.discardSeverity=5).
            log_aggregator_enabled: (Boolean) Enable sending logs to external log aggregator.
            log_aggregator_host: (String) Hostname/IP where external logs will be sent to.
            log_aggregator_individual_facts: (Boolean) If set, system tracking facts will be sent for each package, service, or other item found in a scan, allowing for greater search query granularity. If unset, facts will be sent as a single dictionary, allowing for greater efficiency in fact processing.
            log_aggregator_level: (String) Level threshold used by log handler. Severities from lowest to highest are DEBUG, INFO, WARNING, ERROR, CRITICAL. Messages less severe than the threshold will be ignored by log handler. (messages under category awx.anlytics ignore this setting)
            log_aggregator_loggers: |-
                (List of String) List of loggers that will send HTTP logs to the collector, these can include any or all of:
                awx - service logs
                activity_stream - activity stream records
                job_events - callback data from Ansible job events
                system_tracking - facts gathered from scan jobs
                broadcast_websocket - errors pertaining to websockets broadcast metrics
            log_aggregator_max_disk_usage_path: (String) Location to persist logs that should be retried after an outage of the external log aggregator (defaults to /var/lib/awx). Equivalent to the rsyslogd queue.spoolDirectory setting.
            log_aggregator_password: (String) Password or authentication token for external log aggregator (if required; HTTP/s only).
            log_aggregator_port: (Number) Port on Logging Aggregator to send logs to (if required and not provided in Logging Aggregator).
            log_aggregator_protocol: (String) Protocol used to communicate with log aggregator.  HTTPS/HTTP assumes HTTPS unless http:// is explicitly used in the Logging Aggregator hostname.
            log_aggregator_rsyslogd_debug: (Boolean) Enabled high verbosity debugging for rsyslogd.  Useful for debugging connection issues for external log aggregation.
            log_aggregator_tcp_timeout: (Number) Number of seconds for a TCP connection to external log aggregator to timeout. Applies to HTTPS and TCP log aggregator protocols.
            log_aggregator_tower_uuid: (String) Useful to uniquely identify instances.
            log_aggregator_type: (String) Format messages for the chosen log aggregator.
            log_aggregator_username: (String) Username for external log aggregator (if required; HTTP/s only).
            log_aggregator_verify_cert: (Boolean) Flag to control enable/disable of certificate verification when LOG_AGGREGATOR_PROTOCOL is "https". If enabled, the log handler will verify certificate sent by external log aggregator before establishing connection.
        importStatements: []
    awx_settings_misc_system Resource - awx:
        subCategory: ""
        name: awx_settings_misc_system Resource - awx
        title: awx_settings_misc_system Resource - awx
        argumentDocs:
            activity_stream_enabled: (Boolean) Enable capturing activity for the activity stream.
            activity_stream_enabled_for_inventory_sync: (Boolean) Enable capturing activity for the activity stream when running inventory sync.
            automation_analytics_gather_interval: (Number) Interval (in seconds) between data gathering.
            automation_analytics_last_entries: (String) Last gathered entries from the data collection service of Automation Analytics
            automation_analytics_last_gather: (String)
            automation_analytics_url: (String) This setting is used to to configure the upload URL for data collection for Automation Analytics.
            cleanup_host_metrics_last_ts: (String)
            csrf_trusted_origins: (List of String) If the service is behind a reverse proxy/load balancer, use this setting to configure the schema://addresses from which the service should trust Origin header values.
            custom_venv_paths: (List of String) Paths where Tower will look for custom virtual environments (in addition to /var/lib/awx/venv/). Enter one path per line.
            default_control_plane_queue_name: (String)
            default_execution_environment: (Number) The Execution Environment to be used when one has not been configured for a job template.
            default_execution_queue_name: (String)
            host_metric_summary_task_last_ts: (String)
            insights_tracking_state: (Boolean) Enables the service to gather data on automation and send it to Automation Analytics.
            install_uuid: (String)
            is_k8s: (Boolean) Indicates whether the instance is part of a kubernetes-based deployment.
            license: (String) The license controls which features and functionality are enabled. Use /api/v2/config/ to update or change the license.
            manage_organization_auth: (Boolean) Controls whether any Organization Admin has the privileges to create and manage users and teams. You may want to disable this ability if you are using an LDAP or SAML integration.
            org_admins_can_see_all_users: (Boolean) Controls whether any Organization Admin can view all users and teams, even those not associated with their Organization.
            proxy_ip_allowed_list: (List of String) If the service is behind a reverse proxy/load balancer, use this setting to configure the proxy IP addresses from which the service should trust custom REMOTE_HOST_HEADERS header values. If this setting is an empty list (the default), the headers specified by REMOTE_HOST_HEADERS will be trusted unconditionally')
            redhat_password: (String) This password is used to send data to Automation Analytics
            redhat_username: (String) This username is used to send data to Automation Analytics
            remote_host_headers: (List of String) HTTP headers and meta keys to search to determine remote host name or IP. Add additional items to this list, such as "HTTP_X_FORWARDED_FOR", if behind a reverse proxy. See the "Proxy Support" section of the AAP Installation guide for more details.
            subscription_usage_model: (String) Defines subscription usage model and shows Host Metrics
            subscriptions_password: (String) This password is used to retrieve subscription and content information
            subscriptions_username: (String) This username is used to retrieve subscription and content information
            tower_url_base: (String) This setting is used by services like notifications to render a valid url to the service.
            ui_next: (Boolean) Enable preview of new user interface.
        importStatements: []
    awx_settings_oidc Resource - awx:
        subCategory: ""
        name: awx_settings_oidc Resource - awx
        title: awx_settings_oidc Resource - awx
        argumentDocs:
            social_auth_oidc_key: (String) The OIDC key (Client ID) from your IDP.
            social_auth_oidc_oidc_endpoint: (String) The URL for your OIDC provider including the path up to /.well-known/openid-configuration
            social_auth_oidc_secret: (String, Sensitive) The OIDC secret (Client Secret) from your IDP.
            social_auth_oidc_verify_ssl: (Boolean) Verify the OIDC provider ssl certificate.
        importStatements: []
    awx_settings_ui Resource - awx:
        subCategory: ""
        name: awx_settings_ui Resource - awx
        title: awx_settings_ui Resource - awx
        argumentDocs:
            custom_login_info: (String) If needed, you can add specific information (such as a legal notice or a disclaimer) to a text box in the login modal using this setting. Any content added must be in plain text or an HTML fragment, as other markup languages are not supported.
            custom_logo: (String) To set up a custom logo, provide a file that you create. For the custom logo to look its best, use a .png file with a transparent background. GIF, PNG and JPEG formats are supported.
            max_ui_job_events: (Number) Maximum number of job events for the UI to retrieve within a single request.
            pendo_tracking_state: (String) Enable or Disable User Analytics Tracking.
            ui_live_updates_enabled: (Boolean) If disabled, the page will not refresh when events are received. Reloading the page will be required to get the latest details.
        importStatements: []
    awx_team Resource - awx:
        subCategory: ""
        name: awx_team Resource - awx
        title: awx_team Resource - awx
        argumentDocs:
            description: (String) Optional description of this team.
            id: (Number) Database ID for this team.
            name: (String) Name of this team.
            organization: (Number) Organization
        importStatements: []
    awx_team_associate_role Resource - awx:
        subCategory: ""
        name: awx_team_associate_role Resource - awx
        title: awx_team_associate_role Resource - awx
        argumentDocs:
            role_id: (Number) Database ID of the role to assign.
            team_id: (Number) Database ID for this Team.
        importStatements: []
    awx_token Resource - awx:
        subCategory: ""
        name: awx_token Resource - awx
        title: awx_token Resource - awx
        argumentDocs:
            application: (Number) Application
            description: (String) Optional description of this access token.
            expires: (String)
            id: (Number) Database ID for this access token.
            refresh_token: (String)
            scope: (String) Allowed scopes, further restricts user's permissions. Must be a simple space-separated string with allowed scopes ['read', 'write'].
            token: (String)
            user: (Number) The user representing the token owner
        importStatements: []
    awx_user Resource - awx:
        subCategory: ""
        name: awx_user Resource - awx
        title: awx_user Resource - awx
        argumentDocs:
            email: (String) Email address
            external_account: (String) Set if the account is managed by an external service
            first_name: (String) First name
            id: (Number) Database ID for this user.
            is_superuser: (Boolean) Designates that this user has all permissions without explicitly assigning them.
            is_system_auditor: (Boolean) Is system auditor
            last_login: (String)
            last_name: (String) Last name
            ldap_dn: (String)
            password: (String, Sensitive) Field used to change the password.
            username: (String) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        importStatements: []
    awx_user_associate_role Resource - awx:
        subCategory: ""
        name: awx_user_associate_role Resource - awx
        title: awx_user_associate_role Resource - awx
        argumentDocs:
            role_id: (Number) Database ID of the role to assign.
            user_id: (Number) Database ID for this User.
        importStatements: []
    awx_workflow_job_template Resource - awx:
        subCategory: ""
        name: awx_workflow_job_template Resource - awx
        title: awx_workflow_job_template Resource - awx
        argumentDocs:
            allow_simultaneous: (Boolean) Allow simultaneous
            ask_inventory_on_launch: (Boolean) Ask inventory on launch
            ask_labels_on_launch: (Boolean) Ask labels on launch
            ask_limit_on_launch: (Boolean) Ask limit on launch
            ask_scm_branch_on_launch: (Boolean) Ask scm branch on launch
            ask_skip_tags_on_launch: (Boolean) Ask skip tags on launch
            ask_tags_on_launch: (Boolean) Ask tags on launch
            ask_variables_on_launch: (Boolean) Ask variables on launch
            description: (String) Optional description of this workflow job template.
            extra_vars: (String) Extra vars
            id: (Number) Database ID for this workflow job template.
            inventory: (Number) Inventory applied as a prompt, assuming job template prompts for inventory
            job_tags: (String) Job tags
            limit: (String) Limit
            name: (String) Name of this workflow job template.
            organization: (Number) The organization used to determine access to this template.
            scm_branch: (String) Scm branch
            skip_tags: (String) Skip tags
            survey_enabled: (Boolean) Survey enabled
            webhook_credential: (Number) Personal Access Token for posting back the status to the service API
            webhook_service: (String) Service that webhook requests will be accepted from
        importStatements: []
    awx_workflow_job_template_associate_notification_template Resource - awx:
        subCategory: ""
        name: awx_workflow_job_template_associate_notification_template Resource - awx
        title: awx_workflow_job_template_associate_notification_template Resource - awx
        argumentDocs:
            notification_template_id: (Number) Database ID of the notificationtemplate to assign.
            option: (String) Notification Option
            workflow_job_template_id: (Number) Database ID for this WorkflowJobTemplate.
        importStatements: []
    awx_workflow_job_template_survey_spec Resource - awx:
        subCategory: ""
        name: awx_workflow_job_template_survey_spec Resource - awx
        title: awx_workflow_job_template_survey_spec Resource - awx
        argumentDocs:
            spec: (String) The survey spec for this WorkflowJobTemplate.
            workflow_job_template_id: (Number) Database ID for this WorkflowJobTemplate.
        importStatements: []
